/dts-v1/;
#include <st/f4/stm32f429Xi.dtsi>
#include <st/f4/stm32f429i(e-g)tx-pinctrl.dtsi>

/ {
	model = "STM32F429";
	compatible = "O2C14,F429";

	chosen {
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
	};

	leds: leds {
		compatible = "gpio-leds";
		led_0: led_0 {
			gpios = <&gpiob 1 GPIO_ACTIVE_HIGH>;
		};
		moto_ctrl0: moto_ctrl0 {
			gpios = <&gpioe 0 GPIO_ACTIVE_HIGH>;
		};
		moto_ctrl1: moto_ctrl1 {
			gpios = <&gpioe 1 GPIO_ACTIVE_HIGH>;
		};
	};
	
	pwm_motos: pwm_motos {
		compatible = "pwm-leds";
		pwm_moto1:pwm_moto1{
			pwms = <&pwm10 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		key_0: key_0 {
			gpios = <&gpioh 3 GPIO_ACTIVE_HIGH>;
		};
		key_1: key_1 {
			gpios = <&gpioh 2 GPIO_ACTIVE_HIGH>;
		};
		key_2: key_2 {
			gpios = <&gpioc 13 GPIO_ACTIVE_HIGH>;
		};
	};

	aliases {
		led0 = &led_0;
		sw0 = &key_0;
		sw1 = &key_1;
		sw2 = &key_2;
		moto-in3 = &moto_ctrl0;
		moto-in4 = &moto_ctrl1;
		pwm-moto = &pwm_moto1;
	};
};

&clk_lsi {
	status = "okay";
};

&clk_hse {
	// hse-bypass;
	clock-frequency = <DT_FREQ_M(25)>;
	status = "okay";
};

&pll {
	div-m = <25>;
	mul-n = <336>;
	div-p = <2>;// rcc
	div-q = <7>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(168)>; /* highest value to get a precise USB clock */
	ahb-prescaler = <1>;
	apb1-prescaler = <4>;
	apb2-prescaler = <2>;
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&timers10 {
	st,prescaler = <10000>;// 8.4k
	status = "okay";

	pwm10: pwm {
		status = "okay";
		pinctrl-0 = <&tim10_ch1_pf6>;
		pinctrl-names = "default";
	};
};

&sram0 {
	reg = <0x20000000 DT_SIZE_K(256)>;
};

&flash0 {
	reg = <0x08000000 DT_SIZE_K(1024)>;
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* 32KB for bootloader */
		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 DT_SIZE_K(32)>;
			read-only;
		};

		/*
		 * nvs subsystem requires 2 sectors with a max total of 32K
		 * On F4 series, the only option is to use the following
		 * partition, which is compatible with mcuboot usage.
		 * Keep it commented in order it is not used by CI.
		 *
		 * storage_partition: partition@8000 {
			 *    label = "storage";
			 *    reg = <0x0008000 DT_SIZE_K(32)>;
		 * };
		 */

		/* application image slot: 256KB */
		slot0_partition: partition@20000 {
			label = "image-0";
			reg = <0x00020000 DT_SIZE_K(256)>;
		};

		/* backup slot: 256KB */
		slot1_partition: partition@60000 {
			label = "image-1";
			reg = <0x00060000 DT_SIZE_K(256)>;
		};

		/* swap slot: 128KB */
		scratch_partition: partition@a0000 {
			label = "image-scratch";
			reg = <0x000a0000 DT_SIZE_K(128)>;
		};

	};
};
